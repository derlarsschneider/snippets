# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
executors:
  default-executor:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/snippets
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

jobs:
  build:
    executor: default-executor
    steps:
      - checkout
      - setup_remote_docker
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run:
          name: Build and run tests
          command: |
            gradle build

      - persist_to_workspace:
          root: .
          paths: 
            - build

  push:
    executor: default-executor
    steps:
      - attach_workspace:
          at: ~/

      - setup_remote_docker

      - run:
          name: Debug output
          command: |
            pwd
            ls -la
            ls -la ~/
      - run:
          name: Build docker image
          command: |
            gradle buildImage
      - run:
          name: Save docker image
          command: |
            mkdir -p build/docker-cache
            docker save -o build/docker-cache/built-image.tar derlarsschneider/snippets:latest
      - run: echo $DOCKERHUB_USERNAME
      - run:
          name: Push docker image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push derlarsschneider/snippets:latest
      - save_cache:
          key: docker_cache_key
          paths:
            - build/docker-cache
workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - push:
         requires: 
           - build
         context: docker
